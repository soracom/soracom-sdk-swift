//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class DataSourceResourceMetadata: Codable, Equatable {

    public var attributeNames: [String]?

    public var lastModifiedTime: Int?

    public var resourceId: String?

    public var resourceType: String?

    public init(attributeNames: [String]? = nil, lastModifiedTime: Int? = nil, resourceId: String? = nil, resourceType: String? = nil) {
        self.attributeNames = attributeNames
        self.lastModifiedTime = lastModifiedTime
        self.resourceId = resourceId
        self.resourceType = resourceType
    }

    private enum CodingKeys: String, CodingKey {
        case attributeNames
        case lastModifiedTime
        case resourceId
        case resourceType
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        attributeNames = try container.decodeArrayIfPresent(.attributeNames)
        lastModifiedTime = try container.decodeIfPresent(.lastModifiedTime)
        resourceId = try container.decodeIfPresent(.resourceId)
        resourceType = try container.decodeIfPresent(.resourceType)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(attributeNames, forKey: .attributeNames)
        try container.encodeIfPresent(lastModifiedTime, forKey: .lastModifiedTime)
        try container.encodeIfPresent(resourceId, forKey: .resourceId)
        try container.encodeIfPresent(resourceType, forKey: .resourceType)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DataSourceResourceMetadata else { return false }
      guard self.attributeNames == object.attributeNames else { return false }
      guard self.lastModifiedTime == object.lastModifiedTime else { return false }
      guard self.resourceId == object.resourceId else { return false }
      guard self.resourceType == object.resourceType else { return false }
      return true
    }

    public static func == (lhs: DataSourceResourceMetadata, rhs: DataSourceResourceMetadata) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
