//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class EnableMFAOTPResponse: Codable, Equatable {

    public var totpUri: String?

    public init(totpUri: String? = nil) {
        self.totpUri = totpUri
    }

    private enum CodingKeys: String, CodingKey {
        case totpUri
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        totpUri = try container.decodeIfPresent(.totpUri)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(totpUri, forKey: .totpUri)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EnableMFAOTPResponse else { return false }
      guard self.totpUri == object.totpUri else { return false }
      return true
    }

    public static func == (lhs: EnableMFAOTPResponse, rhs: EnableMFAOTPResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
