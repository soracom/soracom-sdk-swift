//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class GenerateTokenRequest: Codable, Equatable {

    /** 新しい API トークンの有効期限の長さ（秒単位）。
指定しなければデフォルトは 86400 [秒]（24時間）。
最大値は 172800 [秒]（48時間）。
 */
    public var tokenTimeoutSeconds: Int?

    public init(tokenTimeoutSeconds: Int? = nil) {
        self.tokenTimeoutSeconds = tokenTimeoutSeconds
    }

    private enum CodingKeys: String, CodingKey {
        case tokenTimeoutSeconds
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        tokenTimeoutSeconds = try container.decodeIfPresent(.tokenTimeoutSeconds)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(tokenTimeoutSeconds, forKey: .tokenTimeoutSeconds)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GenerateTokenRequest else { return false }
      guard self.tokenTimeoutSeconds == object.tokenTimeoutSeconds else { return false }
      return true
    }

    public static func == (lhs: GenerateTokenRequest, rhs: GenerateTokenRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
