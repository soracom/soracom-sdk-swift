//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class GetSignupTokenRequest: Codable, Equatable {

    public var authKey: String?

    public var authKeyId: String?

    public init(authKey: String? = nil, authKeyId: String? = nil) {
        self.authKey = authKey
        self.authKeyId = authKeyId
    }

    private enum CodingKeys: String, CodingKey {
        case authKey
        case authKeyId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        authKey = try container.decodeIfPresent(.authKey)
        authKeyId = try container.decodeIfPresent(.authKeyId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(authKey, forKey: .authKey)
        try container.encodeIfPresent(authKeyId, forKey: .authKeyId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GetSignupTokenRequest else { return false }
      guard self.authKey == object.authKey else { return false }
      guard self.authKeyId == object.authKeyId else { return false }
      return true
    }

    public static func == (lhs: GetSignupTokenRequest, rhs: GetSignupTokenRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
