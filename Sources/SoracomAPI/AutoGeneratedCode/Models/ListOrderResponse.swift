//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class ListOrderResponse: Codable, Equatable {

    /** 発注リスト */
    public var orderList: [GetOrderResponse]?

    public init(orderList: [GetOrderResponse]? = nil) {
        self.orderList = orderList
    }

    private enum CodingKeys: String, CodingKey {
        case orderList
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        orderList = try container.decodeArrayIfPresent(.orderList)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(orderList, forKey: .orderList)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ListOrderResponse else { return false }
      guard self.orderList == object.orderList else { return false }
      return true
    }

    public static func == (lhs: ListOrderResponse, rhs: ListOrderResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
