//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class MFAAuthenticationRequest: Codable, Equatable {

    public var mfaOTPCode: String?

    public init(mfaOTPCode: String? = nil) {
        self.mfaOTPCode = mfaOTPCode
    }

    private enum CodingKeys: String, CodingKey {
        case mfaOTPCode
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        mfaOTPCode = try container.decodeIfPresent(.mfaOTPCode)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(mfaOTPCode, forKey: .mfaOTPCode)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? MFAAuthenticationRequest else { return false }
      guard self.mfaOTPCode == object.mfaOTPCode else { return false }
      return true
    }

    public static func == (lhs: MFAAuthenticationRequest, rhs: MFAAuthenticationRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
