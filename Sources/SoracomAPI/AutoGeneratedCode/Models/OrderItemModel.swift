//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class OrderItemModel: Codable, Equatable {

    /** 商品コード */
    public var productCode: String?

    /** 購入数 */
    public var quantity: Int?

    public init(productCode: String? = nil, quantity: Int? = nil) {
        self.productCode = productCode
        self.quantity = quantity
    }

    private enum CodingKeys: String, CodingKey {
        case productCode
        case quantity
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        productCode = try container.decodeIfPresent(.productCode)
        quantity = try container.decodeIfPresent(.quantity)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(productCode, forKey: .productCode)
        try container.encodeIfPresent(quantity, forKey: .quantity)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? OrderItemModel else { return false }
      guard self.productCode == object.productCode else { return false }
      guard self.quantity == object.quantity else { return false }
      return true
    }

    public static func == (lhs: OrderItemModel, rhs: OrderItemModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
