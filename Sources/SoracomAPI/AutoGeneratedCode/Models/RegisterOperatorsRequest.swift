//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class RegisterOperatorsRequest: Codable, Equatable {

    /** Valid coverage types are "jp" (Japan coverage type) or "g" (Global coverage type) */
    public enum CoverageTypes: String, Codable {
        case jp = "jp"
        case g = "g"

        public static let cases: [CoverageTypes] = [
          .jp,
          .g,
        ]
    }

    public var email: String

    /** パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z) を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。 */
    public var password: String

    /** Valid coverage types are "jp" (Japan coverage type) or "g" (Global coverage type) */
    public var coverageTypes: [CoverageTypes]?

    public init(email: String, password: String, coverageTypes: [CoverageTypes]? = nil) {
        self.email = email
        self.password = password
        self.coverageTypes = coverageTypes
    }

    private enum CodingKeys: String, CodingKey {
        case email
        case password
        case coverageTypes
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        email = try container.decode(.email)
        password = try container.decode(.password)
        coverageTypes = try container.decodeArrayIfPresent(.coverageTypes)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(email, forKey: .email)
        try container.encode(password, forKey: .password)
        try container.encodeIfPresent(coverageTypes, forKey: .coverageTypes)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? RegisterOperatorsRequest else { return false }
      guard self.email == object.email else { return false }
      guard self.password == object.password else { return false }
      guard self.coverageTypes == object.coverageTypes else { return false }
      return true
    }

    public static func == (lhs: RegisterOperatorsRequest, rhs: RegisterOperatorsRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
