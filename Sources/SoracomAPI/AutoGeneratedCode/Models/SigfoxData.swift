//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public final class SigfoxData: Codable, Equatable {

    public var data: String?

    public init(data: String? = nil) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        data = try container.decodeIfPresent(.data)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(data, forKey: .data)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SigfoxData else { return false }
      guard self.data == object.data else { return false }
      return true
    }

    public static func == (lhs: SigfoxData, rhs: SigfoxData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
