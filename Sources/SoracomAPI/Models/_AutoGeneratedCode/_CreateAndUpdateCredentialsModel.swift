//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _CreateAndUpdateCredentialsModel: Codable, Equatable {

    public enum `Type`: String, Codable {
        case awsCredentials = "aws-credentials"
        case azureCredentials = "azure-credentials"
        case psk = "psk"
        case x509 = "x509"

        public static let cases: [`Type`] = [
          .awsCredentials,
          .azureCredentials,
          .psk,
          .x509,
        ]
    }

    open var credentials: [String: Any]?

    open var description: String?

    open var type: `Type`?

    public init(credentials: [String: Any]? = nil, description: String? = nil, type: `Type`? = nil) {
        self.credentials = credentials
        self.description = description
        self.type = type
    }

    private enum CodingKeys: String, CodingKey {
        case credentials
        case description
        case type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        credentials = try container.decodeAnyIfPresent(.credentials)
        description = try container.decodeIfPresent(.description)
        type = try container.decodeIfPresent(.type)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeAnyIfPresent(credentials, forKey: .credentials)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(type, forKey: .type)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _CreateAndUpdateCredentialsModel else { return false }
      guard NSDictionary(dictionary: self.credentials ?? [:]).isEqual(to: object.credentials ?? [:]) else { return false }
      guard self.description == object.description else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: _CreateAndUpdateCredentialsModel, rhs: _CreateAndUpdateCredentialsModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
