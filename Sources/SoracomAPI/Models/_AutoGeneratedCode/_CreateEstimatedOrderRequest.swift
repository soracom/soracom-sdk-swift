//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _CreateEstimatedOrderRequest: Codable, Equatable {

    /** 発注商品リスト */
    open var orderItemList: [OrderItemModel]?

    /** 商品発送先ID */
    open var shippingAddressId: String?

    public init(orderItemList: [OrderItemModel]? = nil, shippingAddressId: String? = nil) {
        self.orderItemList = orderItemList
        self.shippingAddressId = shippingAddressId
    }

    private enum CodingKeys: String, CodingKey {
        case orderItemList
        case shippingAddressId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        orderItemList = try container.decodeArrayIfPresent(.orderItemList)
        shippingAddressId = try container.decodeIfPresent(.shippingAddressId)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(orderItemList, forKey: .orderItemList)
        try container.encodeIfPresent(shippingAddressId, forKey: .shippingAddressId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _CreateEstimatedOrderRequest else { return false }
      guard self.orderItemList == object.orderItemList else { return false }
      guard self.shippingAddressId == object.shippingAddressId else { return false }
      return true
    }

    public static func == (lhs: _CreateEstimatedOrderRequest, rhs: _CreateEstimatedOrderRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
