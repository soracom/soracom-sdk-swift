//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _CreditCard: Codable, Equatable {

    open var cvc: String?

    open var expireMonth: Int?

    open var expireYear: Int?

    open var name: String?

    open var number: String?

    public init(cvc: String? = nil, expireMonth: Int? = nil, expireYear: Int? = nil, name: String? = nil, number: String? = nil) {
        self.cvc = cvc
        self.expireMonth = expireMonth
        self.expireYear = expireYear
        self.name = name
        self.number = number
    }

    private enum CodingKeys: String, CodingKey {
        case cvc
        case expireMonth
        case expireYear
        case name
        case number
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        cvc = try container.decodeIfPresent(.cvc)
        expireMonth = try container.decodeIfPresent(.expireMonth)
        expireYear = try container.decodeIfPresent(.expireYear)
        name = try container.decodeIfPresent(.name)
        number = try container.decodeIfPresent(.number)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(cvc, forKey: .cvc)
        try container.encodeIfPresent(expireMonth, forKey: .expireMonth)
        try container.encodeIfPresent(expireYear, forKey: .expireYear)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(number, forKey: .number)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _CreditCard else { return false }
      guard self.cvc == object.cvc else { return false }
      guard self.expireMonth == object.expireMonth else { return false }
      guard self.expireYear == object.expireYear else { return false }
      guard self.name == object.name else { return false }
      guard self.number == object.number else { return false }
      return true
    }

    public static func == (lhs: _CreditCard, rhs: _CreditCard) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
