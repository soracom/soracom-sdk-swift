//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _FunnelDestination: Codable, Equatable {

    open var provider: String?

    open var resourceUrl: String?

    open var service: String?

    public init(provider: String? = nil, resourceUrl: String? = nil, service: String? = nil) {
        self.provider = provider
        self.resourceUrl = resourceUrl
        self.service = service
    }

    private enum CodingKeys: String, CodingKey {
        case provider
        case resourceUrl
        case service
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        provider = try container.decodeIfPresent(.provider)
        resourceUrl = try container.decodeIfPresent(.resourceUrl)
        service = try container.decodeIfPresent(.service)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(resourceUrl, forKey: .resourceUrl)
        try container.encodeIfPresent(service, forKey: .service)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _FunnelDestination else { return false }
      guard self.provider == object.provider else { return false }
      guard self.resourceUrl == object.resourceUrl else { return false }
      guard self.service == object.service else { return false }
      return true
    }

    public static func == (lhs: _FunnelDestination, rhs: _FunnelDestination) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
