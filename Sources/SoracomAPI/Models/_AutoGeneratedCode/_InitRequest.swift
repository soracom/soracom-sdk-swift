//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _InitRequest: Codable, Equatable {

    open var email: String

    open var password: String

    open var authKeyId: String

    open var authKey: String

    public init(email: String, password: String, authKeyId: String, authKey: String) {
        self.email = email
        self.password = password
        self.authKeyId = authKeyId
        self.authKey = authKey
    }

    private enum CodingKeys: String, CodingKey {
        case email
        case password
        case authKeyId
        case authKey
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        email = try container.decode(.email)
        password = try container.decode(.password)
        authKeyId = try container.decode(.authKeyId)
        authKey = try container.decode(.authKey)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(email, forKey: .email)
        try container.encode(password, forKey: .password)
        try container.encode(authKeyId, forKey: .authKeyId)
        try container.encode(authKey, forKey: .authKey)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _InitRequest else { return false }
      guard self.email == object.email else { return false }
      guard self.password == object.password else { return false }
      guard self.authKeyId == object.authKeyId else { return false }
      guard self.authKey == object.authKey else { return false }
      return true
    }

    public static func == (lhs: _InitRequest, rhs: _InitRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
