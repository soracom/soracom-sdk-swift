//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _IssueSubscriberTransferTokenRequest: Codable, Equatable {

    /** 移管先オペレーターEmail */
    open var transferDestinationOperatorEmail: String

    /** 移管先オペレーターID */
    open var transferDestinationOperatorId: String

    /** 移管するIMSIリスト */
    open var transferImsi: [String]

    public init(transferDestinationOperatorEmail: String, transferDestinationOperatorId: String, transferImsi: [String]) {
        self.transferDestinationOperatorEmail = transferDestinationOperatorEmail
        self.transferDestinationOperatorId = transferDestinationOperatorId
        self.transferImsi = transferImsi
    }

    private enum CodingKeys: String, CodingKey {
        case transferDestinationOperatorEmail
        case transferDestinationOperatorId
        case transferImsi
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        transferDestinationOperatorEmail = try container.decode(.transferDestinationOperatorEmail)
        transferDestinationOperatorId = try container.decode(.transferDestinationOperatorId)
        transferImsi = try container.decodeArray(.transferImsi)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(transferDestinationOperatorEmail, forKey: .transferDestinationOperatorEmail)
        try container.encode(transferDestinationOperatorId, forKey: .transferDestinationOperatorId)
        try container.encode(transferImsi, forKey: .transferImsi)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _IssueSubscriberTransferTokenRequest else { return false }
      guard self.transferDestinationOperatorEmail == object.transferDestinationOperatorEmail else { return false }
      guard self.transferDestinationOperatorId == object.transferDestinationOperatorId else { return false }
      guard self.transferImsi == object.transferImsi else { return false }
      return true
    }

    public static func == (lhs: _IssueSubscriberTransferTokenRequest, rhs: _IssueSubscriberTransferTokenRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
