//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _JunctionMirroringConfiguration: Codable, Equatable {

    open var peers: [String: JunctionMirroringPeer]?

    public init(peers: [String: JunctionMirroringPeer]? = nil) {
        self.peers = peers
    }

    private enum CodingKeys: String, CodingKey {
        case peers
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        peers = try container.decodeIfPresent(.peers)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(peers, forKey: .peers)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _JunctionMirroringConfiguration else { return false }
      guard self.peers == object.peers else { return false }
      return true
    }

    public static func == (lhs: _JunctionMirroringConfiguration, rhs: _JunctionMirroringConfiguration) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
