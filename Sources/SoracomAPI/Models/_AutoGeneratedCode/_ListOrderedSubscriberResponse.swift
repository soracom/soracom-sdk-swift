//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _ListOrderedSubscriberResponse: Codable, Equatable {

    /** 発注したSIMのリスト */
    open var orderedSubscriberList: [OrderedSubscriber]?

    public init(orderedSubscriberList: [OrderedSubscriber]? = nil) {
        self.orderedSubscriberList = orderedSubscriberList
    }

    private enum CodingKeys: String, CodingKey {
        case orderedSubscriberList
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        orderedSubscriberList = try container.decodeArrayIfPresent(.orderedSubscriberList)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(orderedSubscriberList, forKey: .orderedSubscriberList)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _ListOrderedSubscriberResponse else { return false }
      guard self.orderedSubscriberList == object.orderedSubscriberList else { return false }
      return true
    }

    public static func == (lhs: _ListOrderedSubscriberResponse, rhs: _ListOrderedSubscriberResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
