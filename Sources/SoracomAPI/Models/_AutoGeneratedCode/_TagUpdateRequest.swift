//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _TagUpdateRequest: Codable, Equatable {

    open var tagName: String

    open var tagValue: String

    public init(tagName: String, tagValue: String) {
        self.tagName = tagName
        self.tagValue = tagValue
    }

    private enum CodingKeys: String, CodingKey {
        case tagName
        case tagValue
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        tagName = try container.decode(.tagName)
        tagValue = try container.decode(.tagValue)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(tagName, forKey: .tagName)
        try container.encode(tagValue, forKey: .tagValue)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _TagUpdateRequest else { return false }
      guard self.tagName == object.tagName else { return false }
      guard self.tagValue == object.tagValue else { return false }
      return true
    }

    public static func == (lhs: _TagUpdateRequest, rhs: _TagUpdateRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
