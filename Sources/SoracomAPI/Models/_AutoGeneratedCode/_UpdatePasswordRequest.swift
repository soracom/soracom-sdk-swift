//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

open class _UpdatePasswordRequest: Codable, Equatable {

    open var currentPassword: String

    open var newPassword: String

    public init(currentPassword: String, newPassword: String) {
        self.currentPassword = currentPassword
        self.newPassword = newPassword
    }

    private enum CodingKeys: String, CodingKey {
        case currentPassword
        case newPassword
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        currentPassword = try container.decode(.currentPassword)
        newPassword = try container.decode(.newPassword)
    }

    open func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(currentPassword, forKey: .currentPassword)
        try container.encode(newPassword, forKey: .newPassword)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? _UpdatePasswordRequest else { return false }
      guard self.currentPassword == object.currentPassword else { return false }
      guard self.newPassword == object.newPassword else { return false }
      return true
    }

    public static func == (lhs: _UpdatePasswordRequest, rhs: _UpdatePasswordRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
