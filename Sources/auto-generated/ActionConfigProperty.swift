// ActionConfigProperty.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class ActionConfigProperty: PayloadConvertible {

    public enum ExecutionDateTimeConst: String { 
        case Immediately = "IMMEDIATELY"
        case BeginningOfNextMonth = "BEGINNING_OF_NEXT_MONTH"
        case BeginningOfNextDay = "BEGINNING_OF_NEXT_DAY"
        case AfterOneDay = "AFTER_ONE_DAY"
        case Never = "NEVER"
    }
    public enum SpeedClass: String { 
        case s1_minimum  = "s1.minimum"
        case s1_slow     = "s1.slow"
        case s1_standard = "s1.standard"
        case s1_fast     = "s1.fast"
    }
    public enum HttpMethod: String { 
        case Get = "GET"
        case Post = "POST"
        case Put = "PUT"
        case Delete = "DELETE"
    }

    public var executionDateTimeConst: ExecutionDateTimeConst?
    /** SendMailAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var to: String?
    /** SendMailAction, SendMailToOperatorAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var title: String?
    /** SendMailAction, SendMailToOperatorAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var message: String?

    /** ChangeSpeedClassAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var speedClass: SpeedClass?
    /** \u63A5\u7D9A\u5148URL\u3068\u30D1\u30E9\u30E1\u30FC\u30BF\u30FC ExecuteWebRequestAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var url: String?

    /** ExecuteWebRequestAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var httpMethod: HttpMethod?
    /** ExecuteWebRequestAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var contentType: String?
    /** ExecuteWebRequestAction \u306E\u6642\u306E\u307F\u6709\u52B9(\u4EFB\u610F) */
    public var headers: AnyObject?
    /** ExecuteWebRequestAction \u306E\u6642\u306E\u307F\u6709\u52B9(\u4EFB\u610F) */
    public var body: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var endpoint: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var functionName: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var accessKey: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var secretAccessKey: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var parameter1: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var parameter2: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var parameter3: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var parameter4: String?
    /** InvokeAWSLambdaAction \u306E\u6642\u306E\u307F\u6709\u52B9 */
    public var parameter5: String?

    public required init(
        executionDateTimeConst: ExecutionDateTimeConst? = nil, 
        to: String? = nil, 
        title: String? = nil, 
        message: String? = nil, 
        speedClass: SpeedClass? = nil, 
        url: String? = nil, 
        httpMethod: HttpMethod? = nil, 
        contentType: String? = nil, 
        headers: AnyObject? = nil, 
        body: String? = nil, 
        endpoint: String? = nil, 
        functionName: String? = nil, 
        accessKey: String? = nil, 
        secretAccessKey: String? = nil, 
        parameter1: String? = nil, 
        parameter2: String? = nil, 
        parameter3: String? = nil, 
        parameter4: String? = nil, 
        parameter5: String? = nil
    ) {
        self.executionDateTimeConst = executionDateTimeConst
        self.to = to
        self.title = title
        self.message = message
        self.speedClass = speedClass
        self.url = url
        self.httpMethod = httpMethod
        self.contentType = contentType
        self.headers = headers
        self.body = body
        self.endpoint = endpoint
        self.functionName = functionName
        self.accessKey = accessKey
        self.secretAccessKey = secretAccessKey
        self.parameter1 = parameter1
        self.parameter2 = parameter2
        self.parameter3 = parameter3
        self.parameter4 = parameter4
        self.parameter5 = parameter5
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.executionDateTimeConst] = executionDateTimeConst
        payload[.to] = to
        payload[.title] = title
        payload[.message] = message
        payload[.speedClass] = speedClass
        payload[.url] = url
        payload[.httpMethod] = httpMethod
        payload[.contentType] = contentType
        payload[.headers] = headers
        payload[.body] = body
        payload[.endpoint] = endpoint
        payload[.functionName] = functionName
        payload[.accessKey] = accessKey
        payload[.secretAccessKey] = secretAccessKey
        payload[.parameter1] = parameter1
        payload[.parameter2] = parameter2
        payload[.parameter3] = parameter3
        payload[.parameter4] = parameter4
        payload[.parameter5] = parameter5

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.executionDateTimeConst = payload.decodeExecutionDateTimeConst(.executionDateTimeConst)
        result.to = payload.decodeString(.to)
        result.title = payload.decodeString(.title)
        result.message = payload.decodeString(.message)
        result.speedClass = payload.decodeSpeedClass(.speedClass)
        result.url = payload.decodeString(.url)
        result.httpMethod = payload.decodeHttpMethod(.httpMethod)
        result.contentType = payload.decodeString(.contentType)
        result.headers = payload.decodeAnyObject(.headers)
        result.body = payload.decodeString(.body)
        result.endpoint = payload.decodeString(.endpoint)
        result.functionName = payload.decodeString(.functionName)
        result.accessKey = payload.decodeString(.accessKey)
        result.secretAccessKey = payload.decodeString(.secretAccessKey)
        result.parameter1 = payload.decodeString(.parameter1)
        result.parameter2 = payload.decodeString(.parameter2)
        result.parameter3 = payload.decodeString(.parameter3)
        result.parameter4 = payload.decodeString(.parameter4)
        result.parameter5 = payload.decodeString(.parameter5)
        return result
    }

}

public typealias ActionConfigPropertyList = [ActionConfigProperty]
