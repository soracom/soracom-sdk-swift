// AuthRequest.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class AuthRequest: PayloadConvertible {

    public var authKey: String?
    public var authKeyId: String?
    public var email: String?
    public var operatorId: String?
    public var password: String?
    public var tokenTimeoutSeconds: Int64?
    public var userName: String?

    public required init(
        authKey: String? = nil, 
        authKeyId: String? = nil, 
        email: String? = nil, 
        operatorId: String? = nil, 
        password: String? = nil, 
        tokenTimeoutSeconds: Int64? = nil, 
        userName: String? = nil
    ) {
        self.authKey = authKey
        self.authKeyId = authKeyId
        self.email = email
        self.operatorId = operatorId
        self.password = password
        self.tokenTimeoutSeconds = tokenTimeoutSeconds
        self.userName = userName
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.authKey] = authKey
        payload[.authKeyId] = authKeyId
        payload[.email] = email
        payload[.operatorId] = operatorId
        payload[.password] = password
        payload[.tokenTimeoutSeconds] = tokenTimeoutSeconds
        payload[.userName] = userName

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.authKey = payload.decodeString(.authKey)
        result.authKeyId = payload.decodeString(.authKeyId)
        result.email = payload.decodeString(.email)
        result.operatorId = payload.decodeString(.operatorId)
        result.password = payload.decodeString(.password)
        result.tokenTimeoutSeconds = payload.decodeInt64(.tokenTimeoutSeconds)
        result.userName = payload.decodeString(.userName)
        return result
    }

}

public typealias AuthRequestList = [AuthRequest]
