// EstimatedOrderModel.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class EstimatedOrderModel: PayloadConvertible {

    /** \u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9 */
    public var email: String?
    /** \u767A\u6CE8ID */
    public var orderId: String?
    /** \u767A\u6CE8\u5546\u54C1\u30EA\u30B9\u30C8 */
    public var orderItemList: [EstimatedOrderItemModel]?
    /** \u767A\u9001\u5148 */
    public var shippingAddress: ShippingAddressModel?
    /** \u5546\u54C1\u767A\u9001\u5148ID */
    public var shippingAddressId: String?
    /** \u914D\u9001\u6599 */
    public var shippingCost: Double?
    /** \u6D88\u8CBB\u7A0E */
    public var taxAmount: Double?
    /** \u5408\u8A08\u91D1\u984D */
    public var totalAmount: Double?

    public required init(
        email: String? = nil, 
        orderId: String? = nil, 
        orderItemList: [EstimatedOrderItemModel]? = nil, 
        shippingAddress: ShippingAddressModel? = nil, 
        shippingAddressId: String? = nil, 
        shippingCost: Double? = nil, 
        taxAmount: Double? = nil, 
        totalAmount: Double? = nil
    ) {
        self.email = email
        self.orderId = orderId
        self.orderItemList = orderItemList
        self.shippingAddress = shippingAddress
        self.shippingAddressId = shippingAddressId
        self.shippingCost = shippingCost
        self.taxAmount = taxAmount
        self.totalAmount = totalAmount
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.email] = email
        payload[.orderId] = orderId
        payload[.orderItemList] = orderItemList
        payload[.shippingAddress] = shippingAddress
        payload[.shippingAddressId] = shippingAddressId
        payload[.shippingCost] = shippingCost
        payload[.taxAmount] = taxAmount
        payload[.totalAmount] = totalAmount

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.email = payload.decodeString(.email)
        result.orderId = payload.decodeString(.orderId)
        result.orderItemList = payload.decodeEstimatedOrderItemModel(.orderItemList)
        result.shippingAddress = payload.decodeShippingAddressModel(.shippingAddress)
        result.shippingAddressId = payload.decodeString(.shippingAddressId)
        result.shippingCost = payload.decodeDouble(.shippingCost)
        result.taxAmount = payload.decodeDouble(.taxAmount)
        result.totalAmount = payload.decodeDouble(.totalAmount)
        return result
    }

}

public typealias EstimatedOrderModelList = [EstimatedOrderModel]
