// EventHandlerModel.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class EventHandlerModel: PayloadConvertible {

    public enum Status: String { 
        case Inactive = "inactive"
        case Active = "active"
    }
    public var actionConfigList: [ActionConfig]?
    public var description: String?
    public var handlerId: String?
    public var name: String?
    public var ruleConfig: RuleConfig?

    public var status: Status?
    public var targetGroupId: String?
    public var targetImsi: String?
    public var targetOperatorId: String?
    public var targetTag: TagSet?

    public required init(
        actionConfigList: [ActionConfig]? = nil, 
        description: String? = nil, 
        handlerId: String? = nil, 
        name: String? = nil, 
        ruleConfig: RuleConfig? = nil, 
        status: Status? = nil, 
        targetGroupId: String? = nil, 
        targetImsi: String? = nil, 
        targetOperatorId: String? = nil, 
        targetTag: TagSet? = nil
    ) {
        self.actionConfigList = actionConfigList
        self.description = description
        self.handlerId = handlerId
        self.name = name
        self.ruleConfig = ruleConfig
        self.status = status
        self.targetGroupId = targetGroupId
        self.targetImsi = targetImsi
        self.targetOperatorId = targetOperatorId
        self.targetTag = targetTag
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.actionConfigList] = actionConfigList
        payload[.description] = description
        payload[.handlerId] = handlerId
        payload[.name] = name
        payload[.ruleConfig] = ruleConfig
        payload[.status] = status
        payload[.targetGroupId] = targetGroupId
        payload[.targetImsi] = targetImsi
        payload[.targetOperatorId] = targetOperatorId
        payload[.targetTag] = targetTag

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.actionConfigList = payload.decodeActionConfig(.actionConfigList)
        result.description = payload.decodeString(.description)
        result.handlerId = payload.decodeString(.handlerId)
        result.name = payload.decodeString(.name)
        result.ruleConfig = payload.decodeRuleConfig(.ruleConfig)
        result.status = payload.decodeStatus(.status)
        result.targetGroupId = payload.decodeString(.targetGroupId)
        result.targetImsi = payload.decodeString(.targetImsi)
        result.targetOperatorId = payload.decodeString(.targetOperatorId)
        result.targetTag = payload.decodeTagSet(.targetTag)
        return result
    }

}

public typealias EventHandlerModelList = [EventHandlerModel]
