// GetOrderResponse.swift Generated by swagger-codegen ___SORACOM_SDK_SWIFT_SWAGGERER_CODE_GENERATION_METADATA___

import Foundation


public class GetOrderResponse: PayloadConvertible {

    public enum OrderStatus: String { 
        case Ordering = "ordering"
        case Ordered = "ordered"
        case Kitting = "kitting"
        case Shipped = "shipped"
        case Received = "received"
        case Cancelling = "cancelling"
        case Cancelled = "cancelled"
        case Failed = "failed"
    }
    /** \u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9 */
    public var email: String?
    /** \u767A\u6CE8\u65E5\u6642 */
    public var orderDateTime: String?
    /** \u767A\u6CE8ID */
    public var orderId: String?
    /** \u767A\u6CE8\u5546\u54C1\u30EA\u30B9\u30C8 */
    public var orderItemList: [EstimatedOrderItemModel]?

    /** \u767A\u6CE8\u30B9\u30C6\u30FC\u30BF\u30B9 */
    public var orderStatus: OrderStatus?
    /** \u767A\u9001\u5148 */
    public var shippingAddress: ShippingAddressModel?
    /** \u5546\u54C1\u767A\u9001\u5148ID */
    public var shippingAddressId: String?
    /** \u914D\u9001\u6599 */
    public var shippingCost: Double?
    /** \u5B85\u914D\u4FBF\u9001\u308A\u72B6\u756A\u53F7 */
    public var shippingLabelNumber: String?
    /** \u6D88\u8CBB\u7A0E */
    public var taxAmount: Double?
    /** \u5408\u8A08\u91D1\u984D */
    public var totalAmount: Double?

    public required init(
        email: String? = nil, 
        orderDateTime: String? = nil, 
        orderId: String? = nil, 
        orderItemList: [EstimatedOrderItemModel]? = nil, 
        orderStatus: /* FIXME enum wtf */OrderStatus = nil, 
        shippingAddress: ShippingAddressModel? = nil, 
        shippingAddressId: String? = nil, 
        shippingCost: Double? = nil, 
        shippingLabelNumber: String? = nil, 
        taxAmount: Double? = nil, 
        totalAmount: Double? = nil
    ) {
        self.email = email
        self.orderDateTime = orderDateTime
        self.orderId = orderId
        self.orderItemList = orderItemList
        self.orderStatus = orderStatus
        self.shippingAddress = shippingAddress
        self.shippingAddressId = shippingAddressId
        self.shippingCost = shippingCost
        self.shippingLabelNumber = shippingLabelNumber
        self.taxAmount = taxAmount
        self.totalAmount = totalAmount
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.email] = email
        payload[.orderDateTime] = orderDateTime
        payload[.orderId] = orderId
        payload[.orderItemList] = orderItemList
        // orderStatus: FIXME-ENUM-CASE
        payload[.shippingAddress] = shippingAddress
        payload[.shippingAddressId] = shippingAddressId
        payload[.shippingCost] = shippingCost
        payload[.shippingLabelNumber] = shippingLabelNumber
        payload[.taxAmount] = taxAmount
        payload[.totalAmount] = totalAmount

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.email = payload.getString(.email)
        result.orderDateTime = payload.getString(.orderDateTime)
        result.orderId = payload.getString(.orderId)
        result.orderItemList = payload.___SWAGGERER_POSTPROCESS_FIXME_[EstimatedOrderItemModel]___(.orderItemList)
        // orderStatus: FIXME-ENUM-CASE
        result.shippingAddress = payload.getShippingAddressModel(.shippingAddress)
        result.shippingAddressId = payload.getString(.shippingAddressId)
        result.shippingCost = payload.getDouble(.shippingCost)
        result.shippingLabelNumber = payload.getString(.shippingLabelNumber)
        result.taxAmount = payload.getDouble(.taxAmount)
        result.totalAmount = payload.getDouble(.totalAmount)
        return result
    }

}

public typealias GetOrderResponseList = [GetOrderResponse]
