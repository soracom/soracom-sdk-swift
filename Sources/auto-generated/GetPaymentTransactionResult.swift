// GetPaymentTransactionResult.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class GetPaymentTransactionResult: PayloadConvertible {

    public enum MessageCode: String { 
        case Success = "success"
        case Processing = "processing"
        case InvalidRequest = "invalid_request"
        case InvalidNumber = "invalid_number"
        case IncorrectNumber = "incorrect_number"
        case InvalidName = "invalid_name"
        case InvalidExpiryMonth = "invalid_expiry_month"
        case InvalidExpiryYear = "invalid_expiry_year"
        case InvalidExpiry = "invalid_expiry"
        case IncorrectExpiry = "incorrect_expiry"
        case InvalidCvc = "invalid_cvc"
        case IncorrectCvc = "incorrect_cvc"
        case CardDeclined = "card_declined"
        case Missing = "missing"
        case ProcessingError = "processing_error"
    }
    public enum Status: String { 
        case Success = "success"
        case Error = "error"
    }
    /** \u8AB2\u91D1\u984D */
    public var amount: PaymentAmount?
    /** \u8AB2\u91D1\u5185\u5BB9\u8A73\u7D30 */
    public var description: PaymentDescription?
    /** \u30E1\u30C3\u30BB\u30FC\u30B8 */
    public var message: String?

    /** \u30E1\u30C3\u30BB\u30FC\u30B8\u30B3\u30FC\u30C9 */
    public var messageCode: MessageCode?

    /** \u30B9\u30C6\u30FC\u30BF\u30B9 */
    public var status: Status?

    public required init(
        amount: PaymentAmount? = nil, 
        description: PaymentDescription? = nil, 
        message: String? = nil, 
        messageCode: MessageCode? = nil, 
        status: Status? = nil
    ) {
        self.amount = amount
        self.description = description
        self.message = message
        self.messageCode = messageCode
        self.status = status
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.amount] = amount
        payload[.description] = description
        payload[.message] = message
        payload[.messageCode] = messageCode
        payload[.status] = status

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.amount = payload.decodePaymentAmount(.amount)
        result.description = payload.decodePaymentDescription(.description)
        result.message = payload.decodeString(.message)
        result.messageCode = payload.decodeMessageCode(.messageCode)
        result.status = payload.decodeStatus(.status)
        return result
    }

}

public typealias GetPaymentTransactionResultList = [GetPaymentTransactionResult]
