// ProductModel.swift Generated by swagger-codegen ___SORACOM_SDK_SWIFT_SWAGGERER_CODE_GENERATION_METADATA___

import Foundation


public class ProductModel: PayloadConvertible {

    public enum ProductType: String { 
        case Sim = "sim"
        case NetworkModule = "network_module"
    }
    /** \u5546\u54C1\u8CA9\u58F2\u500B\u6570 */
    public var count: Double?
    /** \u6700\u5927\u8CFC\u5165\u6570\u91CF */
    public var maxQuantity: Int64?
    /** \u5546\u54C1\u8CA9\u58F2\u500B\u6570\u3054\u3068\u306E\u4FA1\u683C */
    public var price: Double?
    /** \u5546\u54C1\u30B3\u30FC\u30C9 */
    public var productCode: String?
    /** \u5546\u54C1\u8AAC\u660E\u30DA\u30FC\u30B8URL */
    public var productInfoURL: String?
    /** \u5546\u54C1\u540D */
    public var productName: String?

    /** \u5546\u54C1\u7A2E\u5225 */
    public var productType: ProductType?
    /** \u5546\u54C1\u30D7\u30ED\u30D1\u30C6\u30A3 */
    public var properties: [String:String]?

    public required init(
        count: Double? = nil, 
        maxQuantity: Int64? = nil, 
        price: Double? = nil, 
        productCode: String? = nil, 
        productInfoURL: String? = nil, 
        productName: String? = nil, 
        productType: /* FIXME enum wtf */ProductType = nil, 
        properties: [String:String]? = nil
    ) {
        self.count = count
        self.maxQuantity = maxQuantity
        self.price = price
        self.productCode = productCode
        self.productInfoURL = productInfoURL
        self.productName = productName
        self.productType = productType
        self.properties = properties
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.count] = count
        payload[.maxQuantity] = maxQuantity
        payload[.price] = price
        payload[.productCode] = productCode
        payload[.productInfoURL] = productInfoURL
        payload[.productName] = productName
        // productType: FIXME-ENUM-CASE
        payload[.properties] = properties

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.count = payload.getDouble(.count)
        result.maxQuantity = payload.getInt64(.maxQuantity)
        result.price = payload.getDouble(.price)
        result.productCode = payload.getString(.productCode)
        result.productInfoURL = payload.getString(.productInfoURL)
        result.productName = payload.getString(.productName)
        // productType: FIXME-ENUM-CASE
        result.properties = payload.___SWAGGERER_POSTPROCESS_FIXME_[String:String]___(.properties)
        return result
    }

}

public typealias ProductModelList = [ProductModel]
