// Subscriber.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class Subscriber: PayloadConvertible {

    public var imsi: String?
    public var msisdn: String?
    public var serialNumber: String?
    public var iccid: String?
    public var apn: String?
    public var speedClass: String?
    public var createdAt: Int64?
    public var lastModifiedAt: Int64?
    public var expiryTime: Int64?
    public var expiryAction: String?
    public var status: String?
    public var sessionStatus: SessionStatus?
    public var tags: TagSet?
    public var operatorId: String?

    public required init(
        imsi: String? = nil, 
        msisdn: String? = nil, 
        serialNumber: String? = nil, 
        iccid: String? = nil, 
        apn: String? = nil, 
        speedClass: String? = nil, 
        createdAt: Int64? = nil, 
        lastModifiedAt: Int64? = nil, 
        expiryTime: Int64? = nil, 
        expiryAction: String? = nil, 
        status: String? = nil, 
        sessionStatus: SessionStatus? = nil, 
        tags: TagSet? = nil, 
        operatorId: String? = nil
    ) {
        self.imsi = imsi
        self.msisdn = msisdn
        self.serialNumber = serialNumber
        self.iccid = iccid
        self.apn = apn
        self.speedClass = speedClass
        self.createdAt = createdAt
        self.lastModifiedAt = lastModifiedAt
        self.expiryTime = expiryTime
        self.expiryAction = expiryAction
        self.status = status
        self.sessionStatus = sessionStatus
        self.tags = tags
        self.operatorId = operatorId
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.imsi] = imsi
        payload[.msisdn] = msisdn
        payload[.serialNumber] = serialNumber
        payload[.iccid] = iccid
        payload[.apn] = apn
        payload[.speedClass] = speedClass
        payload[.createdAt] = createdAt
        payload[.lastModifiedAt] = lastModifiedAt
        payload[.expiryTime] = expiryTime
        payload[.expiryAction] = expiryAction
        payload[.status] = status
        payload[.sessionStatus] = sessionStatus
        payload[.tags] = tags
        payload[.operatorId] = operatorId

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.imsi = payload.decodeString(.imsi)
        result.msisdn = payload.decodeString(.msisdn)
        result.serialNumber = payload.decodeString(.serialNumber)
        result.iccid = payload.decodeString(.iccid)
        result.apn = payload.decodeString(.apn)
        result.speedClass = payload.decodeString(.speedClass)
        result.createdAt = payload.decodeInt64(.createdAt)
        result.lastModifiedAt = payload.decodeInt64(.lastModifiedAt)
        result.expiryTime = payload.decodeInt64(.expiryTime)
        result.expiryAction = payload.decodeString(.expiryAction)
        result.status = payload.decodeString(.status)
        result.sessionStatus = payload.decodeSessionStatus(.sessionStatus)
        result.tags = payload.decodeTagSet(.tags)
        result.operatorId = payload.decodeString(.operatorId)
        return result
    }

}

public typealias SubscriberList = [Subscriber]
