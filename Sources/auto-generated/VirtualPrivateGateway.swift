// VirtualPrivateGateway.swift Generated by swagger-codegen  â€” Custom output templates and post-processing by CodeGeneratorForSoracomSDKSwift.Swaggerer version 0.0d1. Generated 2016-09-12T00:54:57Z

import Foundation


public class VirtualPrivateGateway: PayloadConvertible {

    public enum PrimaryServiceName: String { 
        case Canal = "Canal"
        case Direct = "Direct"
        case Door = "Door"
        case Gate = "Gate"
    }
    public var operatorId: String?
    public var id: String?

    public var primaryServiceName: PrimaryServiceName?
    public var _type: Int64?
    public var status: String?
    public var useInternetGateway: Bool?
    public var vpcPeeringConnections: Map?
    public var virtualInterfaces: Map?
    public var createdTime: Int64?
    public var lastModifiedTime: Int64?
    public var tags: TagSet?

    public required init(
        operatorId: String? = nil, 
        id: String? = nil, 
        primaryServiceName: PrimaryServiceName? = nil, 
        _type: Int64? = nil, 
        status: String? = nil, 
        useInternetGateway: Bool? = nil, 
        vpcPeeringConnections: Map? = nil, 
        virtualInterfaces: Map? = nil, 
        createdTime: Int64? = nil, 
        lastModifiedTime: Int64? = nil, 
        tags: TagSet? = nil
    ) {
        self.operatorId = operatorId
        self.id = id
        self.primaryServiceName = primaryServiceName
        self._type = _type
        self.status = status
        self.useInternetGateway = useInternetGateway
        self.vpcPeeringConnections = vpcPeeringConnections
        self.virtualInterfaces = virtualInterfaces
        self.createdTime = createdTime
        self.lastModifiedTime = lastModifiedTime
        self.tags = tags
        
    }

    // MARK: PayloadConvertible

    public func toPayload() -> Payload {

        let payload: Payload = [:]

        payload[.operatorId] = operatorId
        payload[.id] = id
        payload[.primaryServiceName] = primaryServiceName
        payload[._type] = _type
        payload[.status] = status
        payload[.useInternetGateway] = useInternetGateway
        payload[.vpcPeeringConnections] = vpcPeeringConnections
        payload[.virtualInterfaces] = virtualInterfaces
        payload[.createdTime] = createdTime
        payload[.lastModifiedTime] = lastModifiedTime
        payload[.tags] = tags

        return payload;
    }

    public static func from(_ payload: Payload?) -> Self? {
        guard let payload = payload else {
            return nil
        }

        _ = payload // suppress compiler warnings when payload isn't used in generated code

        let result = self.init()

        result.operatorId = payload.decodeString(.operatorId)
        result.id = payload.decodeString(.id)
        result.primaryServiceName = payload.decodePrimaryServiceName(.primaryServiceName)
        result._type = payload.decodeInt64(._type)
        result.status = payload.decodeString(.status)
        result.useInternetGateway = payload.decodeBool(.useInternetGateway)
        result.vpcPeeringConnections = payload.decodeMap(.vpcPeeringConnections)
        result.virtualInterfaces = payload.decodeMap(.virtualInterfaces)
        result.createdTime = payload.decodeInt64(.createdTime)
        result.lastModifiedTime = payload.decodeInt64(.lastModifiedTime)
        result.tags = payload.decodeTagSet(.tags)
        return result
    }

}

public typealias VirtualPrivateGatewayList = [VirtualPrivateGateway]
