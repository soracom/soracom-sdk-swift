{{#models}}{{#model}}// {{classname}}.swift Generated by swagger-codegen

import Foundation

{{#description}}

/** {{description}} */{{/description}}
public class {{classname}}: PayloadConvertible {
{{#vars}}
{{#isEnum}}
    public enum {{datatypeWithEnum}}: String { {{#allowableValues}}{{#values}}
        case {{enum}} = "{{raw}}"{{/values}}{{/allowableValues}}
    }
{{/isEnum}}
{{/vars}}
{{#vars}}
{{#isEnum}}

    {{#description}}/** {{description}} */
    {{/description}}public var {{name}}: {{{datatypeWithEnum}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{^isEnum}}
    {{#description}}/** {{description}} */
    {{/description}}public var {{name}}: {{{datatype}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}
{{/isEnum}}
{{/vars}}

{{^unwrapRequired}}
    public init() {}
{{/unwrapRequired}}
{{#unwrapRequired}}
    public init({{#requiredVars}}{{^-first}}, {{/-first}}{{name}}: {{#isEnum}}{{datatypeWithEnum}}{{/isEnum}}{{^isEnum}}{{datatype}}{{/isEnum}}{{/requiredVars}}) {
        {{#requiredVars}}
        self.{{name}} = {{name}}
        {{/requiredVars}}
    }
{{/unwrapRequired}}

    // MARK: PayloadConvertible
    public func toPayload() -> Payload {

        let payload = [:]

{{#vars}}
{{#isEnum}}
        // {{name}}: FIXME-ENUM-CASE
{{/isEnum}}
{{^isEnum}}
{{#unwrapRequired}}
        if {{name}} != nil {
            payload[.{{name}}] = {{name}}
        }
{{/unwrapRequired}}
{{^unwrapRequired}}
        payload[.{{name}}] = {{name}}
{{/unwrapRequired}}
{{/isEnum}}
{{/vars}}

        return payload;
    }

    public static func from(_ payload: Payload?) -> {{classname}}? {
        guard let payload = payload else {
            return nil
        }
        var result = {{classname}}()

{{#vars}}
{{#isEnum}}
        // {{name}}: FIXME-ENUM-CASE
{{/isEnum}}
{{^isEnum}}
{{#unwrapRequired}}
        result.{{name}} = payload[.{{name}}] as? {{datatype}}
{{/unwrapRequired}}
{{^unwrapRequired}}
        result.{{name}} = payload[.{{name}}] as? {{datatype}}
{{/unwrapRequired}}
{{/isEnum}}
{{/vars}}
    }

}{{/model}}
{{/models}}

public typealias {{classname}}List = [{{classname}}]
