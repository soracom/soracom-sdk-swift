//
// CredentialAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class CredentialAPI {
    /**
     Create a credential.
     
     - parameter credentialsId: (path) credentials_id 
     - parameter credentials: (body) credentials 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createCredential(credentialsId: String, credentials: CreateAndUpdateCredentialsModel, completion: @escaping ((_ data: CredentialsModel?,_ error: Error?) -> Void)) {
        createCredentialWithRequestBuilder(credentialsId: credentialsId, credentials: credentials).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create a credential.
     - POST /credentials/{credentials_id}
     - Creates a new credential.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{output=none}]
     
     - parameter credentialsId: (path) credentials_id 
     - parameter credentials: (body) credentials 

     - returns: RequestBuilder<CredentialsModel> 
     */
    open class func createCredentialWithRequestBuilder(credentialsId: String, credentials: CreateAndUpdateCredentialsModel) -> RequestBuilder<CredentialsModel> {
        var path = "/credentials/{credentials_id}"
        path = path.replacingOccurrences(of: "{credentials_id}", with: "\(credentialsId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: credentials)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CredentialsModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete a credential.
     
     - parameter credentialsId: (path) Credentials ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteCredential(credentialsId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteCredentialWithRequestBuilder(credentialsId: credentialsId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete a credential.
     - DELETE /credentials/{credentials_id}
     - Deletes a credential.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter credentialsId: (path) Credentials ID 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteCredentialWithRequestBuilder(credentialsId: String) -> RequestBuilder<Void> {
        var path = "/credentials/{credentials_id}"
        path = path.replacingOccurrences(of: "{credentials_id}", with: "\(credentialsId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List of credentials.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listCredentials(completion: @escaping ((_ data: [CredentialsModel]?,_ error: Error?) -> Void)) {
        listCredentialsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List of credentials.
     - GET /credentials
     - Returns a list of credentials.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{output=none}]

     - returns: RequestBuilder<[CredentialsModel]> 
     */
    open class func listCredentialsWithRequestBuilder() -> RequestBuilder<[CredentialsModel]> {
        let path = "/credentials"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[CredentialsModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update a credential.
     
     - parameter credentialsId: (path) credentials_id 
     - parameter credentials: (body) credentials 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateCredential(credentialsId: String, credentials: CreateAndUpdateCredentialsModel, completion: @escaping ((_ data: CredentialsModel?,_ error: Error?) -> Void)) {
        updateCredentialWithRequestBuilder(credentialsId: credentialsId, credentials: credentials).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Update a credential.
     - PUT /credentials/{credentials_id}
     - Updates a credential.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{output=none}]
     
     - parameter credentialsId: (path) credentials_id 
     - parameter credentials: (body) credentials 

     - returns: RequestBuilder<CredentialsModel> 
     */
    open class func updateCredentialWithRequestBuilder(credentialsId: String, credentials: CreateAndUpdateCredentialsModel) -> RequestBuilder<CredentialsModel> {
        var path = "/credentials/{credentials_id}"
        path = path.replacingOccurrences(of: "{credentials_id}", with: "\(credentialsId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: credentials)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CredentialsModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
