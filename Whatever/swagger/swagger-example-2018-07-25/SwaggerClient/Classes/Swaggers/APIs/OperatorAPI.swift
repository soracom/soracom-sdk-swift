//
// OperatorAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OperatorAPI {
    /**
     Create Operator.
     
     - parameter request: (body) email, password 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createOperator(request: RegisterOperatorsRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        createOperatorWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Create Operator.
     - POST /operators
     - Makes a request to create a new operator. An e-mail is sent to the e-mail address specified in the parameters, containing a one-time token for verifying the operatorâ€™s registration.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter request: (body) email, password 

     - returns: RequestBuilder<Void> 
     */
    open class func createOperatorWithRequestBuilder(request: RegisterOperatorsRequest) -> RequestBuilder<Void> {
        let path = "/operators"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete Operator AuthKey.
     
     - parameter operatorId: (path) operator_id 
     - parameter authKeyId: (path) auth_key_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteOperatorAuthKey(operatorId: String, authKeyId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteOperatorAuthKeyWithRequestBuilder(operatorId: operatorId, authKeyId: authKeyId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete Operator AuthKey.
     - DELETE /operators/{operator_id}/auth_keys/{auth_key_id}
     - Deletes an AuthKey from the operator.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter authKeyId: (path) auth_key_id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteOperatorAuthKeyWithRequestBuilder(operatorId: String, authKeyId: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/auth_keys/{auth_key_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{auth_key_id}", with: "\(authKeyId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Enable Operator's MFA.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func enableMFA(operatorId: String, completion: @escaping ((_ data: EnableMFAOTPResponse?,_ error: Error?) -> Void)) {
        enableMFAWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Enable Operator's MFA.
     - POST /operators/{operator_id}/mfa
     - Enables operator's MFA. After calling this APIg, it should be verified by calling `Operator:verifyMFA` API.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "totpUri" : "totpUri"
}}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<EnableMFAOTPResponse> 
     */
    open class func enableMFAWithRequestBuilder(operatorId: String) -> RequestBuilder<EnableMFAOTPResponse> {
        var path = "/operators/{operator_id}/mfa"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EnableMFAOTPResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Generate Authentication Token.
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) token timeout seconds 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func generateAuthToken(operatorId: String, request: GenerateTokenRequest, completion: @escaping ((_ data: GenerateTokenResponse?,_ error: Error?) -> Void)) {
        generateAuthTokenWithRequestBuilder(operatorId: operatorId, request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Generate Authentication Token.
     - POST /operators/{operator_id}/token
     - Generates a new API token. If you insert the current API token into the header and make a request, a response is returned containing the new API token. You can then use the new API token in future requests.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "token" : "token"
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) token timeout seconds 

     - returns: RequestBuilder<GenerateTokenResponse> 
     */
    open class func generateAuthTokenWithRequestBuilder(operatorId: String, request: GenerateTokenRequest) -> RequestBuilder<GenerateTokenResponse> {
        var path = "/operators/{operator_id}/token"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenerateTokenResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Generate Operator AuthKey.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func generateOperatorAuthKey(operatorId: String, completion: @escaping ((_ data: GenerateOperatorsAuthKeyResponse?,_ error: Error?) -> Void)) {
        generateOperatorAuthKeyWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Generate Operator AuthKey.
     - POST /operators/{operator_id}/auth_keys
     - Generates an AuthKey for the operator.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "authKey" : "authKey",
  "authKeyId" : "authKeyId"
}}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<GenerateOperatorsAuthKeyResponse> 
     */
    open class func generateOperatorAuthKeyWithRequestBuilder(operatorId: String) -> RequestBuilder<GenerateOperatorsAuthKeyResponse> {
        var path = "/operators/{operator_id}/auth_keys"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenerateOperatorsAuthKeyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Generate Token for Support Console.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func generateSupportToken(operatorId: String, completion: @escaping ((_ data: SupportTokenResponse?,_ error: Error?) -> Void)) {
        generateSupportTokenWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Generate Token for Support Console.
     - POST /operators/{operator_id}/support/token
     - Returns a token for accessing the support console.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "token" : "token"
}}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<SupportTokenResponse> 
     */
    open class func generateSupportTokenWithRequestBuilder(operatorId: String) -> RequestBuilder<SupportTokenResponse> {
        var path = "/operators/{operator_id}/support/token"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SupportTokenResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get Operator's MFA Status.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMFAStatus(operatorId: String, completion: @escaping ((_ data: MFAStatusOfUseResponse?,_ error: Error?) -> Void)) {
        getMFAStatusWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Operator's MFA Status.
     - GET /operators/{operator_id}/mfa
     - Gets operator's MFA status. The MFA status is one of `ACTIVE`, `INACTIVE` or `UNCONFIRMED`.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "status" : "status"
}}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<MFAStatusOfUseResponse> 
     */
    open class func getMFAStatusWithRequestBuilder(operatorId: String) -> RequestBuilder<MFAStatusOfUseResponse> {
        var path = "/operators/{operator_id}/mfa"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<MFAStatusOfUseResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get Operator.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOperator(operatorId: String, completion: @escaping ((_ data: GetOperatorResponse?,_ error: Error?) -> Void)) {
        getOperatorWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Operator.
     - GET /operators/{operator_id}
     - Returns information about the operator.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "updateDate" : "updateDate",
  "description" : "description",
  "operatorId" : "operatorId",
  "email" : "email",
  "rootOperatorId" : "rootOperatorId",
  "createDate" : "createDate"
}}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<GetOperatorResponse> 
     */
    open class func getOperatorWithRequestBuilder(operatorId: String) -> RequestBuilder<GetOperatorResponse> {
        var path = "/operators/{operator_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GetOperatorResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Issue Email Change Token.
     
     - parameter request: (body) email 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func issueEmailChangeToken(request: IssueEmailChangeTokenRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        issueEmailChangeTokenWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Issue Email Change Token.
     - POST /operators/email_change_token/issue
     - Sends an e-mail with a one-time token for executing the e-mail address change.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter request: (body) email 

     - returns: RequestBuilder<Void> 
     */
    open class func issueEmailChangeTokenWithRequestBuilder(request: IssueEmailChangeTokenRequest) -> RequestBuilder<Void> {
        let path = "/operators/email_change_token/issue"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Issue Operator's MFA Revoke Token.
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func issueMFARevokingToken(request: MFAIssueRevokingTokenRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        issueMFARevokingTokenWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Issue Operator's MFA Revoke Token.
     - POST /operators/mfa_revoke_token/issue
     - Issues a token to revoke operator's MFA. The issued token will be sent to the operator via email.
     
     - parameter request: (body) request 

     - returns: RequestBuilder<Void> 
     */
    open class func issueMFARevokingTokenWithRequestBuilder(request: MFAIssueRevokingTokenRequest) -> RequestBuilder<Void> {
        let path = "/operators/mfa_revoke_token/issue"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     List Operator AuthKeys.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listOperatorAuthKeys(operatorId: String, completion: @escaping ((_ data: [AuthKeyResponse]?,_ error: Error?) -> Void)) {
        listOperatorAuthKeysWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List Operator AuthKeys.
     - GET /operators/{operator_id}/auth_keys
     - Returns the operator's AuthKey list.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example=[ {
  "authKeyId" : "authKeyId",
  "lastUsedDateTime" : 6,
  "createDateTime" : 0
}, {
  "authKeyId" : "authKeyId",
  "lastUsedDateTime" : 6,
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<[AuthKeyResponse]> 
     */
    open class func listOperatorAuthKeysWithRequestBuilder(operatorId: String) -> RequestBuilder<[AuthKeyResponse]> {
        var path = "/operators/{operator_id}/auth_keys"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[AuthKeyResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Revoke Operator's MFA.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func revokeMFA(operatorId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        revokeMFAWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Revoke Operator's MFA.
     - DELETE /operators/{operator_id}/mfa
     - Revokes operator's MFA without backup codes.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<Void> 
     */
    open class func revokeMFAWithRequestBuilder(operatorId: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/mfa"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update Operator Password.
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) current password, new password 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateOperatorPassword(operatorId: String, request: UpdatePasswordRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        updateOperatorPasswordWithRequestBuilder(operatorId: operatorId, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update Operator Password.
     - POST /operators/{operator_id}/password
     - Updates the operator's password.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) current password, new password 

     - returns: RequestBuilder<Void> 
     */
    open class func updateOperatorPasswordWithRequestBuilder(operatorId: String, request: UpdatePasswordRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/password"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Verify Email Change Token.
     
     - parameter token: (body) token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func verifyEmailChangeToken(token: VerifyEmailChangeTokenRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        verifyEmailChangeTokenWithRequestBuilder(token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Verify Email Change Token.
     - POST /operators/email_change_token/verify
     - Verifies the token for the e-mail address change, and then changes the e-mail address.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter token: (body) token 

     - returns: RequestBuilder<Void> 
     */
    open class func verifyEmailChangeTokenWithRequestBuilder(token: VerifyEmailChangeTokenRequest) -> RequestBuilder<Void> {
        let path = "/operators/email_change_token/verify"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Verify Operator's MFA OTP Code.
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func verifyMFA(operatorId: String, request: MFAAuthenticationRequest, completion: @escaping ((_ data: OperatorMFAVerifyingResponse?,_ error: Error?) -> Void)) {
        verifyMFAWithRequestBuilder(operatorId: operatorId, request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Verify Operator's MFA OTP Code.
     - POST /operators/{operator_id}/mfa/verify
     - Verifies operator's MFA with OTP code after calling `Operator:enableMFA` API. MFA will not be activated unless the MFA OTP is verified with this API. Backup codes are going to be returned in the response. These codes must be securely stored.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json, example={
  "backupCodes" : [ "backupCodes", "backupCodes" ]
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter request: (body) request 

     - returns: RequestBuilder<OperatorMFAVerifyingResponse> 
     */
    open class func verifyMFAWithRequestBuilder(operatorId: String, request: MFAAuthenticationRequest) -> RequestBuilder<OperatorMFAVerifyingResponse> {
        var path = "/operators/{operator_id}/mfa/verify"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<OperatorMFAVerifyingResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Verify Operator's MFA revoke token.
     
     - parameter request: (body) request 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func verifyMFARevokingToken(request: MFARevokingTokenVerifyRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        verifyMFARevokingTokenWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Verify Operator's MFA revoke token.
     - POST /operators/mfa_revoke_token/verify
     - Verifies the one-time token which is previously issued by calling `/operators/mfa_revoke_token/issue` API, operator's email address, password, and one of the backup codes. If verified, operator's MFA is going to be revoked.
     
     - parameter request: (body) request 

     - returns: RequestBuilder<Void> 
     */
    open class func verifyMFARevokingTokenWithRequestBuilder(request: MFARevokingTokenVerifyRequest) -> RequestBuilder<Void> {
        let path = "/operators/mfa_revoke_token/verify"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Verify Operator.
     
     - parameter token: (body) token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func verifyOperator(token: VerifyOperatorsRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        verifyOperatorWithRequestBuilder(token: token).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Verify Operator.
     - POST /operators/verify
     - Verifies the operator's registration. Called by setting as parameter the one-time verification token received via e-mail.
     
     - parameter token: (body) token 

     - returns: RequestBuilder<Void> 
     */
    open class func verifyOperatorWithRequestBuilder(token: VerifyOperatorsRequest) -> RequestBuilder<Void> {
        let path = "/operators/verify"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
