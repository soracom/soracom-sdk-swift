//
// OrderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OrderAPI {
    /**
     Cancel order.
     
     - parameter orderId: (path) order_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancelOrder(orderId: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        cancelOrderWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Cancel order.
     - PUT /orders/{order_id}/cancel
     - Cancels an order. If the order has already been dispatched, an error is returned.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=""}]
     
     - parameter orderId: (path) order_id 

     - returns: RequestBuilder<String> 
     */
    open class func cancelOrderWithRequestBuilder(orderId: String) -> RequestBuilder<String> {
        var path = "/orders/{order_id}/cancel"
        path = path.replacingOccurrences(of: "{order_id}", with: "\(orderId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Confirm order.
     
     - parameter orderId: (path) order_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func confirmOrder(orderId: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        confirmOrderWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Confirm order.
     - PUT /orders/{order_id}/confirm
     - Performs a credit limit and confirms the order if no problems are encountered.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=""}]
     
     - parameter orderId: (path) order_id 

     - returns: RequestBuilder<String> 
     */
    open class func confirmOrderWithRequestBuilder(orderId: String) -> RequestBuilder<String> {
        var path = "/orders/{order_id}/confirm"
        path = path.replacingOccurrences(of: "{order_id}", with: "\(orderId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create Quotation.
     
     - parameter request: (body) Order item list and shipping address ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createQuotation(request: CreateEstimatedOrderRequest, completion: @escaping ((_ data: EstimatedOrderModel?,_ error: Error?) -> Void)) {
        createQuotationWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create Quotation.
     - POST /orders
     - Creates a new order quotation. If the orderId is put in /confirm, the order is complete.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "totalAmount" : 1.4658129805029452,
  "shippingCost" : 0.8008281904610115,
  "orderId" : "orderId",
  "orderItemList" : [ {
    "product" : {
      "productCode" : "productCode",
      "maxQuantity" : 6,
      "price" : 1.4658129805029452,
      "count" : 0.8008281904610115,
      "productInfoURL" : "productInfoURL",
      "productName" : "productName",
      "productType" : "sim",
      "properties" : {
        "key" : "properties"
      }
    },
    "productAmount" : 5.962133916683182,
    "quantity" : 5
  }, {
    "product" : {
      "productCode" : "productCode",
      "maxQuantity" : 6,
      "price" : 1.4658129805029452,
      "count" : 0.8008281904610115,
      "productInfoURL" : "productInfoURL",
      "productName" : "productName",
      "productType" : "sim",
      "properties" : {
        "key" : "properties"
      }
    },
    "productAmount" : 5.962133916683182,
    "quantity" : 5
  } ],
  "shippingAddress" : {
    "zipCode" : "zipCode",
    "phoneNumber" : "phoneNumber",
    "city" : "city",
    "companyName" : "companyName",
    "addressLine1" : "addressLine1",
    "fullName" : "fullName",
    "addressLine2" : "addressLine2",
    "state" : "state",
    "department" : "department",
    "building" : "building"
  },
  "shippingAddressId" : "shippingAddressId",
  "taxAmount" : 6.027456183070403,
  "email" : "email"
}}]
     
     - parameter request: (body) Order item list and shipping address ID 

     - returns: RequestBuilder<EstimatedOrderModel> 
     */
    open class func createQuotationWithRequestBuilder(request: CreateEstimatedOrderRequest) -> RequestBuilder<EstimatedOrderModel> {
        let path = "/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EstimatedOrderModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get confirmed order.
     
     - parameter orderId: (path) order_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrder(orderId: String, completion: @escaping ((_ data: GetOrderResponse?,_ error: Error?) -> Void)) {
        getOrderWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get confirmed order.
     - GET /orders/{order_id}
     - Returns a confirmed order.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "orderDateTime" : "yyyyMMddHHmmss",
  "totalAmount" : 9.301444243932576,
  "shippingCost" : 2.3021358869347655,
  "orderId" : "orderId",
  "orderItemList" : [ {
    "product" : {
      "productCode" : "productCode",
      "maxQuantity" : 6,
      "price" : 1.4658129805029452,
      "count" : 0.8008281904610115,
      "productInfoURL" : "productInfoURL",
      "productName" : "productName",
      "productType" : "sim",
      "properties" : {
        "key" : "properties"
      }
    },
    "productAmount" : 5.962133916683182,
    "quantity" : 5
  }, {
    "product" : {
      "productCode" : "productCode",
      "maxQuantity" : 6,
      "price" : 1.4658129805029452,
      "count" : 0.8008281904610115,
      "productInfoURL" : "productInfoURL",
      "productName" : "productName",
      "productType" : "sim",
      "properties" : {
        "key" : "properties"
      }
    },
    "productAmount" : 5.962133916683182,
    "quantity" : 5
  } ],
  "shippingLabelNumber" : "shippingLabelNumber",
  "orderStatus" : "ordering",
  "shippingAddress" : {
    "zipCode" : "zipCode",
    "phoneNumber" : "phoneNumber",
    "city" : "city",
    "companyName" : "companyName",
    "addressLine1" : "addressLine1",
    "fullName" : "fullName",
    "addressLine2" : "addressLine2",
    "state" : "state",
    "department" : "department",
    "building" : "building"
  },
  "shippingAddressId" : "shippingAddressId",
  "taxAmount" : 7.061401241503109,
  "email" : "email"
}}]
     
     - parameter orderId: (path) order_id 

     - returns: RequestBuilder<GetOrderResponse> 
     */
    open class func getOrderWithRequestBuilder(orderId: String) -> RequestBuilder<GetOrderResponse> {
        var path = "/orders/{order_id}"
        path = path.replacingOccurrences(of: "{order_id}", with: "\(orderId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GetOrderResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List ordered subscribers.
     
     - parameter orderId: (path) order_id 
     - parameter lastEvaluatedKey: (query) Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. (optional)
     - parameter limit: (query) Max number of subscribers in a response. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listOrderedSubscribers(orderId: String, lastEvaluatedKey: String? = nil, limit: Int? = nil, completion: @escaping ((_ data: ListOrderedSubscriberResponse?,_ error: Error?) -> Void)) {
        listOrderedSubscribersWithRequestBuilder(orderId: orderId, lastEvaluatedKey: lastEvaluatedKey, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List ordered subscribers.
     - GET /orders/{order_id}/subscribers
     - List ordered subscribers
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "orderedSubscriberList" : [ {
    "serialNumber" : "serialNumber",
    "imsi" : "imsi",
    "msisdn" : "msisdn"
  }, {
    "serialNumber" : "serialNumber",
    "imsi" : "imsi",
    "msisdn" : "msisdn"
  } ]
}}]
     
     - parameter orderId: (path) order_id 
     - parameter lastEvaluatedKey: (query) Serial number of the last subscriber in the previous page that is set to response header with X-Soracom-Next-Key. (optional)
     - parameter limit: (query) Max number of subscribers in a response. (optional)

     - returns: RequestBuilder<ListOrderedSubscriberResponse> 
     */
    open class func listOrderedSubscribersWithRequestBuilder(orderId: String, lastEvaluatedKey: String? = nil, limit: Int? = nil) -> RequestBuilder<ListOrderedSubscriberResponse> {
        var path = "/orders/{order_id}/subscribers"
        path = path.replacingOccurrences(of: "{order_id}", with: "\(orderId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "last_evaluated_key": lastEvaluatedKey, 
            "limit": limit?.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<ListOrderedSubscriberResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List confirmed orders.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listOrders(completion: @escaping ((_ data: ListOrderResponse?,_ error: Error?) -> Void)) {
        listOrdersWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List confirmed orders.
     - GET /orders
     - Returns a list of confirmed orders.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "orderList" : [ {
    "orderDateTime" : "yyyyMMddHHmmss",
    "totalAmount" : 9.301444243932576,
    "shippingCost" : 2.3021358869347655,
    "orderId" : "orderId",
    "orderItemList" : [ {
      "product" : {
        "productCode" : "productCode",
        "maxQuantity" : 6,
        "price" : 1.4658129805029452,
        "count" : 0.8008281904610115,
        "productInfoURL" : "productInfoURL",
        "productName" : "productName",
        "productType" : "sim",
        "properties" : {
          "key" : "properties"
        }
      },
      "productAmount" : 5.962133916683182,
      "quantity" : 5
    }, {
      "product" : {
        "productCode" : "productCode",
        "maxQuantity" : 6,
        "price" : 1.4658129805029452,
        "count" : 0.8008281904610115,
        "productInfoURL" : "productInfoURL",
        "productName" : "productName",
        "productType" : "sim",
        "properties" : {
          "key" : "properties"
        }
      },
      "productAmount" : 5.962133916683182,
      "quantity" : 5
    } ],
    "shippingLabelNumber" : "shippingLabelNumber",
    "orderStatus" : "ordering",
    "shippingAddress" : {
      "zipCode" : "zipCode",
      "phoneNumber" : "phoneNumber",
      "city" : "city",
      "companyName" : "companyName",
      "addressLine1" : "addressLine1",
      "fullName" : "fullName",
      "addressLine2" : "addressLine2",
      "state" : "state",
      "department" : "department",
      "building" : "building"
    },
    "shippingAddressId" : "shippingAddressId",
    "taxAmount" : 7.061401241503109,
    "email" : "email"
  }, {
    "orderDateTime" : "yyyyMMddHHmmss",
    "totalAmount" : 9.301444243932576,
    "shippingCost" : 2.3021358869347655,
    "orderId" : "orderId",
    "orderItemList" : [ {
      "product" : {
        "productCode" : "productCode",
        "maxQuantity" : 6,
        "price" : 1.4658129805029452,
        "count" : 0.8008281904610115,
        "productInfoURL" : "productInfoURL",
        "productName" : "productName",
        "productType" : "sim",
        "properties" : {
          "key" : "properties"
        }
      },
      "productAmount" : 5.962133916683182,
      "quantity" : 5
    }, {
      "product" : {
        "productCode" : "productCode",
        "maxQuantity" : 6,
        "price" : 1.4658129805029452,
        "count" : 0.8008281904610115,
        "productInfoURL" : "productInfoURL",
        "productName" : "productName",
        "productType" : "sim",
        "properties" : {
          "key" : "properties"
        }
      },
      "productAmount" : 5.962133916683182,
      "quantity" : 5
    } ],
    "shippingLabelNumber" : "shippingLabelNumber",
    "orderStatus" : "ordering",
    "shippingAddress" : {
      "zipCode" : "zipCode",
      "phoneNumber" : "phoneNumber",
      "city" : "city",
      "companyName" : "companyName",
      "addressLine1" : "addressLine1",
      "fullName" : "fullName",
      "addressLine2" : "addressLine2",
      "state" : "state",
      "department" : "department",
      "building" : "building"
    },
    "shippingAddressId" : "shippingAddressId",
    "taxAmount" : 7.061401241503109,
    "email" : "email"
  } ]
}}]

     - returns: RequestBuilder<ListOrderResponse> 
     */
    open class func listOrdersWithRequestBuilder() -> RequestBuilder<ListOrderResponse> {
        let path = "/orders"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ListOrderResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List products.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listProducts(completion: @escaping ((_ data: ListProductResponse?,_ error: Error?) -> Void)) {
        listProductsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List products.
     - GET /products
     - Returns a list of products.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "productList" : [ {
    "productCode" : "productCode",
    "maxQuantity" : 6,
    "price" : 1.4658129805029452,
    "count" : 0.8008281904610115,
    "productInfoURL" : "productInfoURL",
    "productName" : "productName",
    "productType" : "sim",
    "properties" : {
      "key" : "properties"
    }
  }, {
    "productCode" : "productCode",
    "maxQuantity" : 6,
    "price" : 1.4658129805029452,
    "count" : 0.8008281904610115,
    "productInfoURL" : "productInfoURL",
    "productName" : "productName",
    "productType" : "sim",
    "properties" : {
      "key" : "properties"
    }
  } ],
  "shippingCostList" : [ {
    "shippingCost" : 0.8008281904610115,
    "size" : 6,
    "shippingArea" : "hokkaido",
    "shippingAreaName" : "shippingAreaName"
  }, {
    "shippingCost" : 0.8008281904610115,
    "size" : 6,
    "shippingArea" : "hokkaido",
    "shippingAreaName" : "shippingAreaName"
  } ]
}}]

     - returns: RequestBuilder<ListProductResponse> 
     */
    open class func listProductsWithRequestBuilder() -> RequestBuilder<ListProductResponse> {
        let path = "/products"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ListProductResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Register subscribers for operator.
     
     - parameter orderId: (path) order_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func registerOrderedSim(orderId: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        registerOrderedSimWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Register subscribers for operator.
     - POST /orders/{order_id}/subscribers/register
     - Registers the ordered SIM with the operator.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=""}]
     
     - parameter orderId: (path) order_id 

     - returns: RequestBuilder<String> 
     */
    open class func registerOrderedSimWithRequestBuilder(orderId: String) -> RequestBuilder<String> {
        var path = "/orders/{order_id}/subscribers/register"
        path = path.replacingOccurrences(of: "{order_id}", with: "\(orderId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
