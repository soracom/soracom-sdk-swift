//
// RoleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class RoleAPI {
    /**
     Attach Role to User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) role_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func attachRole(operatorId: String, userName: String, request: AttachRoleRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        attachRoleWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Attach Role to User.
     - POST /operators/{operator_id}/users/{user_name}/roles
     - Attaches a role to a user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) role_id 

     - returns: RequestBuilder<Void> 
     */
    open class func attachRoleWithRequestBuilder(operatorId: String, userName: String, request: AttachRoleRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/roles"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create Role.
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter request: (body) permission 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createRole(operatorId: String, roleId: String, request: CreateOrUpdateRoleRequest, completion: @escaping ((_ data: CreateRoleResponse?,_ error: Error?) -> Void)) {
        createRoleWithRequestBuilder(operatorId: operatorId, roleId: roleId, request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create Role.
     - POST /operators/{operator_id}/roles/{role_id}
     - Adds a new role.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "roleId" : "roleId"
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter request: (body) permission 

     - returns: RequestBuilder<CreateRoleResponse> 
     */
    open class func createRoleWithRequestBuilder(operatorId: String, roleId: String, request: CreateOrUpdateRoleRequest) -> RequestBuilder<CreateRoleResponse> {
        var path = "/operators/{operator_id}/roles/{role_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CreateRoleResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete Role.
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteRole(operatorId: String, roleId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteRoleWithRequestBuilder(operatorId: operatorId, roleId: roleId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete Role.
     - DELETE /operators/{operator_id}/roles/{role_id}
     - Deletes a role.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteRoleWithRequestBuilder(operatorId: String, roleId: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/roles/{role_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Detach Role from User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter roleId: (path) role_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func detachRole(operatorId: String, userName: String, roleId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        detachRoleWithRequestBuilder(operatorId: operatorId, userName: userName, roleId: roleId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Detach Role from User.
     - DELETE /operators/{operator_id}/users/{user_name}/roles/{role_id}
     - Detaches a role from a user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter roleId: (path) role_id 

     - returns: RequestBuilder<Void> 
     */
    open class func detachRoleWithRequestBuilder(operatorId: String, userName: String, roleId: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/roles/{role_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get Role.
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getRole(operatorId: String, roleId: String, completion: @escaping ((_ data: RoleResponse?,_ error: Error?) -> Void)) {
        getRoleWithRequestBuilder(operatorId: operatorId, roleId: roleId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Role.
     - GET /operators/{operator_id}/roles/{role_id}
     - Retrieves a role.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "roleId" : "roleId",
  "description" : "description",
  "permission" : "permission",
  "updateDateTime" : 6,
  "createDateTime" : 0
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 

     - returns: RequestBuilder<RoleResponse> 
     */
    open class func getRoleWithRequestBuilder(operatorId: String, roleId: String) -> RequestBuilder<RoleResponse> {
        var path = "/operators/{operator_id}/roles/{role_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<RoleResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List Role Attached Users.
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listRoleAttachedUsers(operatorId: String, roleId: String, completion: @escaping ((_ data: [UserDetailResponse]?,_ error: Error?) -> Void)) {
        listRoleAttachedUsersWithRequestBuilder(operatorId: operatorId, roleId: roleId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List Role Attached Users.
     - GET /operators/{operator_id}/roles/{role_id}/users
     - Retrieves a list of users attached to a role.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=[ {
  "description" : "description",
  "authKeyList" : [ {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  }, {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  } ],
  "permission" : "permission",
  "hasPassword" : true,
  "roleList" : [ {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  }, {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  } ],
  "updateDateTime" : 6,
  "userName" : "userName",
  "createDateTime" : 0
}, {
  "description" : "description",
  "authKeyList" : [ {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  }, {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  } ],
  "permission" : "permission",
  "hasPassword" : true,
  "roleList" : [ {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  }, {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  } ],
  "updateDateTime" : 6,
  "userName" : "userName",
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 

     - returns: RequestBuilder<[UserDetailResponse]> 
     */
    open class func listRoleAttachedUsersWithRequestBuilder(operatorId: String, roleId: String) -> RequestBuilder<[UserDetailResponse]> {
        var path = "/operators/{operator_id}/roles/{role_id}/users"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[UserDetailResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List Roles.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listRoles(operatorId: String, completion: @escaping ((_ data: [ListRolesResponse]?,_ error: Error?) -> Void)) {
        listRolesWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List Roles.
     - GET /operators/{operator_id}/roles
     - Returns a list of roles.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=[ {
  "roleId" : "roleId",
  "description" : "description",
  "updateDateTime" : 6,
  "createDateTime" : 0
}, {
  "roleId" : "roleId",
  "description" : "description",
  "updateDateTime" : 6,
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<[ListRolesResponse]> 
     */
    open class func listRolesWithRequestBuilder(operatorId: String) -> RequestBuilder<[ListRolesResponse]> {
        var path = "/operators/{operator_id}/roles"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ListRolesResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List User Roles.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUserRoles(operatorId: String, userName: String, completion: @escaping ((_ data: [RoleResponse]?,_ error: Error?) -> Void)) {
        listUserRolesWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List User Roles.
     - GET /operators/{operator_id}/users/{user_name}/roles
     - Retrieves a list of the user's roles.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=[ {
  "roleId" : "roleId",
  "description" : "description",
  "permission" : "permission",
  "updateDateTime" : 6,
  "createDateTime" : 0
}, {
  "roleId" : "roleId",
  "description" : "description",
  "permission" : "permission",
  "updateDateTime" : 6,
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<[RoleResponse]> 
     */
    open class func listUserRolesWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<[RoleResponse]> {
        var path = "/operators/{operator_id}/users/{user_name}/roles"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[RoleResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update Role.
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter request: (body) permission 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateRole(operatorId: String, roleId: String, request: CreateOrUpdateRoleRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        updateRoleWithRequestBuilder(operatorId: operatorId, roleId: roleId, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update Role.
     - PUT /operators/{operator_id}/roles/{role_id}
     - Edits a role.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter roleId: (path) role_id 
     - parameter request: (body) permission 

     - returns: RequestBuilder<Void> 
     */
    open class func updateRoleWithRequestBuilder(operatorId: String, roleId: String, request: CreateOrUpdateRoleRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/roles/{role_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{role_id}", with: "\(roleId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
