//
// UserAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UserAPI {
    /**
     Create User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) description 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUser(operatorId: String, userName: String, request: CreateUserRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        createUserWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Create User.
     - POST /operators/{operator_id}/users/{user_name}
     - Adds a new SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) description 

     - returns: RequestBuilder<Void> 
     */
    open class func createUserWithRequestBuilder(operatorId: String, userName: String, request: CreateUserRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create Password.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) password 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUserPassword(operatorId: String, userName: String, request: CreateUserPasswordRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        createUserPasswordWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Create Password.
     - POST /operators/{operator_id}/users/{user_name}/password
     - Creates a password for the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) password 

     - returns: RequestBuilder<Void> 
     */
    open class func createUserPasswordWithRequestBuilder(operatorId: String, userName: String, request: CreateUserPasswordRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/password"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUser(operatorId: String, userName: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteUserWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete User.
     - DELETE /operators/{operator_id}/users/{user_name}
     - Deletes the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUserWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete User AuthKey.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter authKeyId: (path) auth_key_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUserAuthKey(operatorId: String, userName: String, authKeyId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteUserAuthKeyWithRequestBuilder(operatorId: operatorId, userName: userName, authKeyId: authKeyId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete User AuthKey.
     - DELETE /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}
     - Deletes an AuthKey from the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter authKeyId: (path) auth_key_id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUserAuthKeyWithRequestBuilder(operatorId: String, userName: String, authKeyId: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{auth_key_id}", with: "\(authKeyId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete Password.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUserPassword(operatorId: String, userName: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteUserPasswordWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Delete Password.
     - DELETE /operators/{operator_id}/users/{user_name}/password
     - Deletes the user's password.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUserPasswordWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/password"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Generate AuthKey.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func generateUserAuthKey(operatorId: String, userName: String, completion: @escaping ((_ data: GenerateUserAuthKeyResponse?,_ error: Error?) -> Void)) {
        generateUserAuthKeyWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Generate AuthKey.
     - POST /operators/{operator_id}/users/{user_name}/auth_keys
     - Generates an AuthKey for the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "authKey" : "authKey",
  "authKeyId" : "authKeyId"
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<GenerateUserAuthKeyResponse> 
     */
    open class func generateUserAuthKeyWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<GenerateUserAuthKeyResponse> {
        var path = "/operators/{operator_id}/users/{user_name}/auth_keys"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GenerateUserAuthKeyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUser(operatorId: String, userName: String, completion: @escaping ((_ data: UserDetailResponse?,_ error: Error?) -> Void)) {
        getUserWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get User.
     - GET /operators/{operator_id}/users/{user_name}
     - Returns a SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "description" : "description",
  "authKeyList" : [ {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  }, {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  } ],
  "permission" : "permission",
  "hasPassword" : true,
  "roleList" : [ {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  }, {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  } ],
  "updateDateTime" : 6,
  "userName" : "userName",
  "createDateTime" : 0
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<UserDetailResponse> 
     */
    open class func getUserWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<UserDetailResponse> {
        var path = "/operators/{operator_id}/users/{user_name}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UserDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get AuthKey.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter authKeyId: (path) auth_key_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserAuthKey(operatorId: String, userName: String, authKeyId: String, completion: @escaping ((_ data: AuthKeyResponse?,_ error: Error?) -> Void)) {
        getUserAuthKeyWithRequestBuilder(operatorId: operatorId, userName: userName, authKeyId: authKeyId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get AuthKey.
     - GET /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}
     - Returns the SAM user's AuthKey.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "authKeyId" : "authKeyId",
  "lastUsedDateTime" : 6,
  "createDateTime" : 0
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter authKeyId: (path) auth_key_id 

     - returns: RequestBuilder<AuthKeyResponse> 
     */
    open class func getUserAuthKeyWithRequestBuilder(operatorId: String, userName: String, authKeyId: String) -> RequestBuilder<AuthKeyResponse> {
        var path = "/operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{auth_key_id}", with: "\(authKeyId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthKeyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get User Permission.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserPermission(operatorId: String, userName: String, completion: @escaping ((_ data: GetUserPermissionResponse?,_ error: Error?) -> Void)) {
        getUserPermissionWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get User Permission.
     - GET /operators/{operator_id}/users/{user_name}/permission
     - Retrieves the SAM user's permissions.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "permission" : "permission"
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<GetUserPermissionResponse> 
     */
    open class func getUserPermissionWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<GetUserPermissionResponse> {
        var path = "/operators/{operator_id}/users/{user_name}/permission"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GetUserPermissionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Has User Password.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func hasUserPassword(operatorId: String, userName: String, completion: @escaping ((_ data: GetUserPasswordResponse?,_ error: Error?) -> Void)) {
        hasUserPasswordWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Has User Password.
     - GET /operators/{operator_id}/users/{user_name}/password
     - Retrieves whether the SAM user has a password or not.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example={
  "hasPassword" : true
}}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<GetUserPasswordResponse> 
     */
    open class func hasUserPasswordWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<GetUserPasswordResponse> {
        var path = "/operators/{operator_id}/users/{user_name}/password"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<GetUserPasswordResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List User AuthKeys.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUserAuthKeys(operatorId: String, userName: String, completion: @escaping ((_ data: [AuthKeyResponse]?,_ error: Error?) -> Void)) {
        listUserAuthKeysWithRequestBuilder(operatorId: operatorId, userName: userName).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List User AuthKeys.
     - GET /operators/{operator_id}/users/{user_name}/auth_keys
     - Returns the SAM user's AuthKey list.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=[ {
  "authKeyId" : "authKeyId",
  "lastUsedDateTime" : 6,
  "createDateTime" : 0
}, {
  "authKeyId" : "authKeyId",
  "lastUsedDateTime" : 6,
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 

     - returns: RequestBuilder<[AuthKeyResponse]> 
     */
    open class func listUserAuthKeysWithRequestBuilder(operatorId: String, userName: String) -> RequestBuilder<[AuthKeyResponse]> {
        var path = "/operators/{operator_id}/users/{user_name}/auth_keys"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[AuthKeyResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List Users.
     
     - parameter operatorId: (path) operator_id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUsers(operatorId: String, completion: @escaping ((_ data: [UserDetailResponse]?,_ error: Error?) -> Void)) {
        listUsersWithRequestBuilder(operatorId: operatorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List Users.
     - GET /operators/{operator_id}/users
     - Returns a list of SAM users.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     - examples: [{contentType=application/json;charset=UTF-8, example=[ {
  "description" : "description",
  "authKeyList" : [ {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  }, {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  } ],
  "permission" : "permission",
  "hasPassword" : true,
  "roleList" : [ {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  }, {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  } ],
  "updateDateTime" : 6,
  "userName" : "userName",
  "createDateTime" : 0
}, {
  "description" : "description",
  "authKeyList" : [ {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  }, {
    "authKeyId" : "authKeyId",
    "lastUsedDateTime" : 6,
    "createDateTime" : 0
  } ],
  "permission" : "permission",
  "hasPassword" : true,
  "roleList" : [ {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  }, {
    "roleId" : "roleId",
    "description" : "description",
    "updateDateTime" : 6,
    "createDateTime" : 0
  } ],
  "updateDateTime" : 6,
  "userName" : "userName",
  "createDateTime" : 0
} ]}]
     
     - parameter operatorId: (path) operator_id 

     - returns: RequestBuilder<[UserDetailResponse]> 
     */
    open class func listUsersWithRequestBuilder(operatorId: String) -> RequestBuilder<[UserDetailResponse]> {
        var path = "/operators/{operator_id}/users"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[UserDetailResponse]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) description 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUser(operatorId: String, userName: String, request: UpdateUserRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        updateUserWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update User.
     - PUT /operators/{operator_id}/users/{user_name}
     - Updates the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) description 

     - returns: RequestBuilder<Void> 
     */
    open class func updateUserWithRequestBuilder(operatorId: String, userName: String, request: UpdateUserRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Update Password.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) password 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUserPassword(operatorId: String, userName: String, request: UpdatePasswordRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        updateUserPasswordWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update Password.
     - PUT /operators/{operator_id}/users/{user_name}/password
     - Updates the password of the SAM user.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) password 

     - returns: RequestBuilder<Void> 
     */
    open class func updateUserPasswordWithRequestBuilder(operatorId: String, userName: String, request: UpdatePasswordRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/password"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Update Permission to User.
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) permission 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUserPermission(operatorId: String, userName: String, request: SetUserPermissionRequest, completion: @escaping ((_ error: Error?) -> Void)) {
        updateUserPermissionWithRequestBuilder(operatorId: operatorId, userName: userName, request: request).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update Permission to User.
     - PUT /operators/{operator_id}/users/{user_name}/permission
     - Updates the SAM user's permissions.
     - API Key:
       - type: apiKey X-Soracom-API-Key 
       - name: api_key
     - API Key:
       - type: apiKey X-Soracom-Token 
       - name: api_token
     
     - parameter operatorId: (path) operator_id 
     - parameter userName: (path) user_name 
     - parameter request: (body) permission 

     - returns: RequestBuilder<Void> 
     */
    open class func updateUserPermissionWithRequestBuilder(operatorId: String, userName: String, request: SetUserPermissionRequest) -> RequestBuilder<Void> {
        var path = "/operators/{operator_id}/users/{user_name}/permission"
        path = path.replacingOccurrences(of: "{operator_id}", with: "\(operatorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{user_name}", with: "\(userName)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
