//
// DataSourceResourceMetadata.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class DataSourceResourceMetadata: Codable {

    public var resourceType: String?
    public var resourceId: String?
    public var lastModifiedTime: Int64?
    public var attributeNames: [String]?


    
    public init(resourceType: String?, resourceId: String?, lastModifiedTime: Int64?, attributeNames: [String]?) {
        self.resourceType = resourceType
        self.resourceId = resourceId
        self.lastModifiedTime = lastModifiedTime
        self.attributeNames = attributeNames
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(resourceType, forKey: "resourceType")
        try container.encodeIfPresent(resourceId, forKey: "resourceId")
        try container.encodeIfPresent(lastModifiedTime, forKey: "lastModifiedTime")
        try container.encodeIfPresent(attributeNames, forKey: "attributeNames")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        resourceType = try container.decodeIfPresent(String.self, forKey: "resourceType")
        resourceId = try container.decodeIfPresent(String.self, forKey: "resourceId")
        lastModifiedTime = try container.decodeIfPresent(Int64.self, forKey: "lastModifiedTime")
        attributeNames = try container.decodeIfPresent([String].self, forKey: "attributeNames")
    }
}

