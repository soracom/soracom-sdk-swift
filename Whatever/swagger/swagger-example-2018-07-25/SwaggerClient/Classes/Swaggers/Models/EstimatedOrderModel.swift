//
// EstimatedOrderModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class EstimatedOrderModel: Codable {

    /** メールアドレス */
    public var email: String?
    /** 発注ID */
    public var orderId: String?
    /** 発注商品リスト */
    public var orderItemList: [EstimatedOrderItemModel]?
    /** 発送先 */
    public var shippingAddress: ShippingAddressModel?
    /** 商品発送先ID */
    public var shippingAddressId: String?
    /** 配送料 */
    public var shippingCost: Double?
    /** 消費税 */
    public var taxAmount: Double?
    /** 合計金額 */
    public var totalAmount: Double?


    
    public init(email: String?, orderId: String?, orderItemList: [EstimatedOrderItemModel]?, shippingAddress: ShippingAddressModel?, shippingAddressId: String?, shippingCost: Double?, taxAmount: Double?, totalAmount: Double?) {
        self.email = email
        self.orderId = orderId
        self.orderItemList = orderItemList
        self.shippingAddress = shippingAddress
        self.shippingAddressId = shippingAddressId
        self.shippingCost = shippingCost
        self.taxAmount = taxAmount
        self.totalAmount = totalAmount
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(email, forKey: "email")
        try container.encodeIfPresent(orderId, forKey: "orderId")
        try container.encodeIfPresent(orderItemList, forKey: "orderItemList")
        try container.encodeIfPresent(shippingAddress, forKey: "shippingAddress")
        try container.encodeIfPresent(shippingAddressId, forKey: "shippingAddressId")
        try container.encodeIfPresent(shippingCost, forKey: "shippingCost")
        try container.encodeIfPresent(taxAmount, forKey: "taxAmount")
        try container.encodeIfPresent(totalAmount, forKey: "totalAmount")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        email = try container.decodeIfPresent(String.self, forKey: "email")
        orderId = try container.decodeIfPresent(String.self, forKey: "orderId")
        orderItemList = try container.decodeIfPresent([EstimatedOrderItemModel].self, forKey: "orderItemList")
        shippingAddress = try container.decodeIfPresent(ShippingAddressModel.self, forKey: "shippingAddress")
        shippingAddressId = try container.decodeIfPresent(String.self, forKey: "shippingAddressId")
        shippingCost = try container.decodeIfPresent(Double.self, forKey: "shippingCost")
        taxAmount = try container.decodeIfPresent(Double.self, forKey: "taxAmount")
        totalAmount = try container.decodeIfPresent(Double.self, forKey: "totalAmount")
    }
}

