//
// LagoonUserCreationRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class LagoonUserCreationRequest: Codable {

    public enum Role: String, Codable { 
        case viewer = "Viewer"
        case editor = "Editor"
    }
    public var userEmail: String?
    public var userPassword: String?
    /** A role that represents the permission. */
    public var role: Role?


    
    public init(userEmail: String?, userPassword: String?, role: Role?) {
        self.userEmail = userEmail
        self.userPassword = userPassword
        self.role = role
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(userEmail, forKey: "userEmail")
        try container.encodeIfPresent(userPassword, forKey: "userPassword")
        try container.encodeIfPresent(role, forKey: "role")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        userEmail = try container.decodeIfPresent(String.self, forKey: "userEmail")
        userPassword = try container.decodeIfPresent(String.self, forKey: "userPassword")
        role = try container.decodeIfPresent(Role.self, forKey: "role")
    }
}

