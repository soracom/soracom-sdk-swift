//
// MonthlyBill.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class MonthlyBill: Codable {

    public enum PaymentStatus: String, Codable { 
        case lessthanminimumcharge = "lessThanMinimumCharge"
        case paying = "paying"
        case paid = "paid"
        case refunding = "refunding"
        case refunded = "refunded"
        case fail = "fail"
    }
    /** 金額 */
    public var amount: Int64?
    /** 直近の課金ステータス */
    public var paymentStatus: PaymentStatus?
    /** 課金詳細取得用のID */
    public var paymentTransactionId: String?
    /** 年月 */
    public var yearMonth: String?


    
    public init(amount: Int64?, paymentStatus: PaymentStatus?, paymentTransactionId: String?, yearMonth: String?) {
        self.amount = amount
        self.paymentStatus = paymentStatus
        self.paymentTransactionId = paymentTransactionId
        self.yearMonth = yearMonth
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(amount, forKey: "amount")
        try container.encodeIfPresent(paymentStatus, forKey: "paymentStatus")
        try container.encodeIfPresent(paymentTransactionId, forKey: "paymentTransactionId")
        try container.encodeIfPresent(yearMonth, forKey: "yearMonth")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        amount = try container.decodeIfPresent(Int64.self, forKey: "amount")
        paymentStatus = try container.decodeIfPresent(PaymentStatus.self, forKey: "paymentStatus")
        paymentTransactionId = try container.decodeIfPresent(String.self, forKey: "paymentTransactionId")
        yearMonth = try container.decodeIfPresent(String.self, forKey: "yearMonth")
    }
}

