//
// ShippingAddressModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ShippingAddressModel: Codable {

    public var addressLine1: String?
    public var addressLine2: String?
    public var building: String?
    public var city: String
    public var companyName: String?
    public var department: String?
    public var fullName: String?
    public var phoneNumber: String?
    public var state: String
    public var zipCode: String


    
    public init(addressLine1: String?, addressLine2: String?, building: String?, city: String, companyName: String?, department: String?, fullName: String?, phoneNumber: String?, state: String, zipCode: String) {
        self.addressLine1 = addressLine1
        self.addressLine2 = addressLine2
        self.building = building
        self.city = city
        self.companyName = companyName
        self.department = department
        self.fullName = fullName
        self.phoneNumber = phoneNumber
        self.state = state
        self.zipCode = zipCode
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(addressLine1, forKey: "addressLine1")
        try container.encodeIfPresent(addressLine2, forKey: "addressLine2")
        try container.encodeIfPresent(building, forKey: "building")
        try container.encode(city, forKey: "city")
        try container.encodeIfPresent(companyName, forKey: "companyName")
        try container.encodeIfPresent(department, forKey: "department")
        try container.encodeIfPresent(fullName, forKey: "fullName")
        try container.encodeIfPresent(phoneNumber, forKey: "phoneNumber")
        try container.encode(state, forKey: "state")
        try container.encode(zipCode, forKey: "zipCode")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        addressLine1 = try container.decodeIfPresent(String.self, forKey: "addressLine1")
        addressLine2 = try container.decodeIfPresent(String.self, forKey: "addressLine2")
        building = try container.decodeIfPresent(String.self, forKey: "building")
        city = try container.decode(String.self, forKey: "city")
        companyName = try container.decodeIfPresent(String.self, forKey: "companyName")
        department = try container.decodeIfPresent(String.self, forKey: "department")
        fullName = try container.decodeIfPresent(String.self, forKey: "fullName")
        phoneNumber = try container.decodeIfPresent(String.self, forKey: "phoneNumber")
        state = try container.decode(String.self, forKey: "state")
        zipCode = try container.decode(String.self, forKey: "zipCode")
    }
}

