//
// VpcPeeringConnection.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class VpcPeeringConnection: Codable {

    public var id: String?
    public var peerOwnerId: String?
    public var peerVpcId: String?
    public var destinationCidrBlock: String?


    
    public init(id: String?, peerOwnerId: String?, peerVpcId: String?, destinationCidrBlock: String?) {
        self.id = id
        self.peerOwnerId = peerOwnerId
        self.peerVpcId = peerVpcId
        self.destinationCidrBlock = destinationCidrBlock
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(peerOwnerId, forKey: "peerOwnerId")
        try container.encodeIfPresent(peerVpcId, forKey: "peerVpcId")
        try container.encodeIfPresent(destinationCidrBlock, forKey: "destinationCidrBlock")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(String.self, forKey: "id")
        peerOwnerId = try container.decodeIfPresent(String.self, forKey: "peerOwnerId")
        peerVpcId = try container.decodeIfPresent(String.self, forKey: "peerVpcId")
        destinationCidrBlock = try container.decodeIfPresent(String.self, forKey: "destinationCidrBlock")
    }
}

